#BAL_Ad   Ad-X1d-X2d-X3d-X4d    = 0                     REQ_Ad      Ad    = 200
#funcional
# 60*F1+72*F2+48*F3+60*F4+
# 28*X1a+40*X1b+36*X1c+38*X1d
# 18*X2a+28*X2b+24*X2c+30*X2d
# 42*X3a+54*X3b+52*X3c+54*X3d
# 36*X4a+48*X4b+40*X4c+46*X4d
#RESOLUCION
#Utilizo la librería lpSolve
library(lpSolve)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,
0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,
0,0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1), ncol=24, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
RHS <- c(0,0,0,0,140,260,360,220,0,0,0,0,180,280,150,200)
dir <- c('=','=','=','=','<=','<=','<=','<=','=','=','=','=','=','=','=','=')
# Solucion
solucion <- lp('min', funcional, A, dir, RHS)
solucion
solucion$solution
# Defino variables:
# Fi: tn producidas por la fábrica i.
# Aj: tn entregadas al almacen j.
# Xij: tn enviadas de la fábrica i al almacen j.
#RESTRICCIONES
#Balance fábricas                                       Capacidad fábricas
#BAL_F1   F1-X1a-X1b-X1c-X1d    = 0                     CAP_F1      F1    <= 140
#BAL_F2   F2-X2a-X2b-X2c-X2d    = 0                     CAP_F2      F2    <= 260
#BAL_F3   F3-X3a-X3b-X3c-X3d    = 0                     CAP_F3      F3    <= 360
#BAL_F4   F4-X4a-X4b-X4c-X4d    = 0                     CAP_F4      F4    <= 220
#Balance almacenes                                      Requerimiento almacenes
#BAL_Aa   Aa-X1a-X2a-X3a-X4a    = 0                     REQ_Aa      Aa    = 180
#BAL_Ab   Ab-X1b-X2b-X3b-X4b    = 0                     REQ_Ab      Ab    = 280
#BAL_Ac   Ac-X1c-X2c-X3c-X4c    = 0                     REQ_Ac      Ac    = 150
#BAL_Ad   Ad-X1d-X2d-X3d-X4d    = 0                     REQ_Ad      Ad    = 200
#funcional
# 60*F1+72*F2+48*F3+60*F4+
# 28*X1a+40*X1b+36*X1c+38*X1d
# 18*X2a+28*X2b+24*X2c+30*X2d
# 42*X3a+54*X3b+52*X3c+54*X3d
# 36*X4a+48*X4b+40*X4c+46*X4d
#RESOLUCION
#Utilizo la librería lpSolve
library(lpSolve)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,
0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,
0,0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1), ncol=24, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
RHS <- c(0,0,0,0,140,260,360,220,0,0,0,0,180,280,150,200)
dir <- c('=','=','=','=','<=','<=','<=','<=','=','=','=','=','=','=','=','=')
# Solucion
solucion <- lp('min', funcional, A, dir, RHS)
solucion
solucion$solution
# Defino variables:
# Fi: tn producidas por la fábrica i.
# Aj: tn entregadas al almacen j.
# Xij: tn enviadas de la fábrica i al almacen j.
#RESTRICCIONES
#Balance fábricas                                       Capacidad fábricas
#BAL_F1   F1-X1a-X1b-X1c-X1d    = 0                     CAP_F1      F1    <= 140
#BAL_F2   F2-X2a-X2b-X2c-X2d    = 0                     CAP_F2      F2    <= 260
#BAL_F3   F3-X3a-X3b-X3c-X3d    = 0                     CAP_F3      F3    <= 360
#BAL_F4   F4-X4a-X4b-X4c-X4d    = 0                     CAP_F4      F4    <= 220
#Balance almacenes                                      Requerimiento almacenes
#BAL_Aa   Aa-X1a-X2a-X3a-X4a    = 0                     REQ_Aa      Aa    = 180
#BAL_Ab   Ab-X1b-X2b-X3b-X4b    = 0                     REQ_Ab      Ab    = 280
#BAL_Ac   Ac-X1c-X2c-X3c-X4c    = 0                     REQ_Ac      Ac    = 150
#BAL_Ad   Ad-X1d-X2d-X3d-X4d    = 0                     REQ_Ad      Ad    = 200
#funcional
# 60*F1+72*F2+48*F3+60*F4+
# 28*X1a+40*X1b+36*X1c+38*X1d
# 18*X2a+28*X2b+24*X2c+30*X2d
# 42*X3a+54*X3b+52*X3c+54*X3d
# 36*X4a+48*X4b+40*X4c+46*X4d
#RESOLUCION
#Utilizo la librería lpSolve
library(lpSolve)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,
0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,
0,0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1), ncol=24, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
RHS <- c(0,0,0,0,140,260,360,220,0,0,0,0,180,280,150,200)
dir <- c('=','=','=','=','<=','<=','<=','<=','=','=','=','=','=','=','=','=')
# Solucion
solucion <- lp('max', funcional, A, dir, RHS)
solucion
solucion$solution
# Defino variables:
# Fi: tn producidas por la fábrica i.
# Aj: tn entregadas al almacen j.
# Xij: tn enviadas de la fábrica i al almacen j.
#RESTRICCIONES
#Balance fábricas                                       Capacidad fábricas
#BAL_F1   F1-X1a-X1b-X1c-X1d    = 0                     CAP_F1      F1    <= 140
#BAL_F2   F2-X2a-X2b-X2c-X2d    = 0                     CAP_F2      F2    <= 260
#BAL_F3   F3-X3a-X3b-X3c-X3d    = 0                     CAP_F3      F3    <= 360
#BAL_F4   F4-X4a-X4b-X4c-X4d    = 0                     CAP_F4      F4    <= 220
#Balance almacenes                                      Requerimiento almacenes
#BAL_Aa   Aa-X1a-X2a-X3a-X4a    = 0                     REQ_Aa      Aa    = 180
#BAL_Ab   Ab-X1b-X2b-X3b-X4b    = 0                     REQ_Ab      Ab    = 280
#BAL_Ac   Ac-X1c-X2c-X3c-X4c    = 0                     REQ_Ac      Ac    = 150
#BAL_Ad   Ad-X1d-X2d-X3d-X4d    = 0                     REQ_Ad      Ad    = 200
#funcional
# 60*F1+72*F2+48*F3+60*F4+
# 28*X1a+40*X1b+36*X1c+38*X1d
# 18*X2a+28*X2b+24*X2c+30*X2d
# 42*X3a+54*X3b+52*X3c+54*X3d
# 36*X4a+48*X4b+40*X4c+46*X4d
#RESOLUCION
#Utilizo la librería lpSolve
library(lpSolve)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,
0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,
0,0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1), ncol=24, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
RHS <- c(0,0,0,0,140,260,360,220,0,0,0,0,180,280,150,200)
dir <- c('=','=','=','=','<=','<=','<=','<=','=','=','=','=','=','=','=','=')
# Solucion
solucion <- lp('min', funcional, A, dir, RHS)
solucion
solucion$solution
solucion$solution
# Defino variables:
# Fi: tn producidas por la fábrica i.
# Aj: tn entregadas al almacen j.
# Xij: tn enviadas de la fábrica i al almacen j.
#RESTRICCIONES
#Balance fábricas                                       Capacidad fábricas
#BAL_F1   F1-X1a-X1b-X1c-X1d    = 0                     CAP_F1      F1    <= 140
#BAL_F2   F2-X2a-X2b-X2c-X2d    = 0                     CAP_F2      F2    <= 260
#BAL_F3   F3-X3a-X3b-X3c-X3d    = 0                     CAP_F3      F3    <= 360
#BAL_F4   F4-X4a-X4b-X4c-X4d    = 0                     CAP_F4      F4    <= 220
#Balance almacenes                                      Requerimiento almacenes
#BAL_Aa   Aa-X1a-X2a-X3a-X4a    = 0                     REQ_Aa      Aa    = 180
#BAL_Ab   Ab-X1b-X2b-X3b-X4b    = 0                     REQ_Ab      Ab    = 280
#BAL_Ac   Ac-X1c-X2c-X3c-X4c    = 0                     REQ_Ac      Ac    = 150
#BAL_Ad   Ad-X1d-X2d-X3d-X4d    = 0                     REQ_Ad      Ad    = 200
#funcional
# 60*F1+72*F2+48*F3+60*F4+
# 28*X1a+40*X1b+36*X1c+38*X1d
# 18*X2a+28*X2b+24*X2c+30*X2d
# 42*X3a+54*X3b+52*X3c+54*X3d
# 36*X4a+48*X4b+40*X4c+46*X4d
#RESOLUCION
#Utilizo la librería lpSolve
library(lpSolve)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,0,
0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,0,
0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,0,
0,0,0,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1), ncol=24, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
RHS <- c(0,0,0,0,140,260,360,220,0,0,0,0,180,280,150,200)
dir <- c('=','=','=','=','<=','<=','<=','<=','=','=','=','=','=','=','=','=')
# Solucion
solucion <- lp('min', funcional, A, dir, RHS)
solucion
solucion$solution
library(lpSolve)
# Cargo la matriz de costos (Fabricación + Transporte)
cost.mat <- matrix(nrow=4,ncol=4)
cost.mat[1,] <- c(88,100,96,98)
cost.mat[2,] <- c(90,100,96,102)
cost.mat[3,] <- c(90,102,100,102)
cost.mat[4,] <- c(96,108,100,106)
cost.mat
# Problema de minimización
direction = "min"
# Cargo las capacidades de las fábricas
row.signs <- rep("<=",4)
row.rhs <- c(140,260,360,220)
# Cargo las demandas a satisfacer
col.signs <- rep(">=",4)
col.rhs <- c(180,280,150,200)
# Solución
solution <- lp.transport(cost.mat = cost.mat,
direction = direction,
row.signs = row.signs,
row.rhs = row.rhs,
col.signs = col.signs,
col.rhs = col.rhs)
solution
solution$solution
# Defino variables:
# Fi: tn producidas por la fábrica i.
# Aj: tn entregadas al almacen j.
# Xij: tn enviadas de la fábrica i al almacen j.
#RESTRICCIONES
#Balance fábricas                                       Capacidad fábricas
#BAL_F1   F1-X1a-X1b-X1c-X1d    = 0                     CAP_F1      F1    <= 140
#BAL_F2   F2-X2a-X2b-X2c-X2d    = 0                     CAP_F2      F2    <= 260
#BAL_F3   F3-X3a-X3b-X3c-X3d    = 0                     CAP_F3      F3    <= 360
#BAL_F4   F4-X4a-X4b-X4c-X4d    = 0                     CAP_F4      F4    <= 220
#Balance almacenes
#BAL_Aa   X1a+X2a+X3a+X4a    = 180
#BAL_Ab   X1b+X2b+X3b+X4b    = 280
#BAL_Ac   X1c+X2c+X3c+X4c    = 150
#BAL_Ad   X1d+X2d+X3d+X4d    = 200
#funcional
# 60*F1+72*F2+48*F3+60*F4+
# 28*X1a+40*X1b+36*X1c+38*X1d
# 18*X2a+28*X2b+24*X2c+30*X2d
# 42*X3a+54*X3b+52*X3c+54*X3d
# 36*X4a+48*X4b+40*X4c+46*X4d
#RESOLUCION
#Utilizo la librería lpSolve
library(lpSolve)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,
0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,
0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,
0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1), ncol=20, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
RHS <- c(0,0,0,0,140,260,360,220,180,280,150,200)
dir <- c('=','=','=','=','<=','<=','<=','<=','=','=','=','=')
# Solucion
solucion <- lp('min', funcional, A, dir, RHS)
solucion
solucion$solution
# Defino Variables:
# A1: litros de A con método 1.
# A2: litros de A con método 2.
# B: litros de B.
# Restricciones
# DISPONIBILIDAD
# DISP_C1     A1*1/270 + A2*1/270 + B*1/450       <= 16
# DISP_C2     A1*299/54720 + A2*1/427.5           <= 12
# DISP_C3       B*1/408 + A2*1/262.5              <= 12
# DISP_C4     A1*1/212.5 + A2*1/212.5 + B*1/320   <= 16
#REQUERIMIENTOS
# REQMIN_A   A1 + A2    >= 600
# REQMAX_A   A1 + A2    <= 1750
# REQ_B     B           <= 1500
# LIM_DESP  A1 + A2 + B <= 2500
#Utilizo la librería lpSolve
library(lpSolve)
#funcional
Z <- c(-14.955, -18.696, 99.706)
#Armo un vector con los coeficientes del funcional
funcional <- c(60,72,48,60,28,40,36,38,18,28,24,30,42,54,52,54,36,48,40,46)
#Armo una matriz con las restricciones
A <- matrix(c(1/270,1/270,1/450,
0,1/427.5, 299/54720,
0,1/262.5, 1/408,
1/212.5, 1/212.5, 1/320,
1, 1, 0,
1, 1, 0,
0, 1, 0,
1, 1, 1), ncol = 3, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
signs <- c('<=','<=','<=','<=','<=','<=','>=','<=')
RHS <- c(16,12,12,16,1750,1500,600,2500)
# Solucion
solucion <- lp('max', Z, A, signs, RHS)
solucion
solucion$solution
# Defino Variables:
# A1: litros de A con método 1.
# A2: litros de A con método 2.
# B: litros de B.
# Restricciones
# DISPONIBILIDAD
# DISP_C1     A1*1/270 + A2*1/270 + B*1/450       <= 16
# DISP_C2     A1*299/54720 + A2*1/427.5           <= 12
# DISP_C3       B*1/408 + A2*1/262.5              <= 12
# DISP_C4     A1*1/212.5 + A2*1/212.5 + B*1/320   <= 16
#REQUERIMIENTOS
# REQMIN_A   A1 + A2    >= 600
# REQMAX_A   A1 + A2    <= 1750
# REQ_B     B           <= 1500
# LIM_DESP  A1 + A2 + B <= 2500
#Utilizo la librería lpSolve
library(lpSolve)
#funcional
Z <- c(-14.955, -18.696, 99.706)
#Armo una matriz con las restricciones
A <- matrix(c(1/270,1/270,1/450,
0,1/427.5, 299/54720,
0,1/262.5, 1/408,
1/212.5, 1/212.5, 1/320,
1, 1, 0,
1, 1, 0,
0, 1, 0,
1, 1, 1), ncol = 3, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
signs <- c('<=','<=','<=','<=','<=','<=','>=','<=')
RHS <- c(16,12,12,16,1750,1500,600,2500)
# Solucion
solucion <- lp('max', Z, A, signs, RHS)
solucion
solucion$solution
# Defino Variables:
# A1: litros de A con método 1.
# A2: litros de A con método 2.
# B: litros de B.
# Restricciones
# DISPONIBILIDAD
# DISP_C1     A1*1/270 + A2*1/270 + B*1/450       <= 16
# DISP_C2     A1*299/54720 + A2*1/427.5           <= 12
# DISP_C3       B*1/408 + A2*1/262.5              <= 12
# DISP_C4     A1*1/212.5 + A2*1/212.5 + B*1/320   <= 16
#REQUERIMIENTOS
# REQMIN_A   A1 + A2    >= 600
# REQMAX_A   A1 + A2    <= 1750
# REQ_B     B           <= 1500
# LIM_DESP  A1 + A2 + B <= 2500
#Utilizo la librería lpSolve
library(lpSolve)
#funcional
Z <- c(-14.955, -18.696, 99.706)
#Armo una matriz con las restricciones
A <- matrix(c(1/270,1/270,1/450,
0,1/427.5, 299/54720,
0,1/262.5, 1/408,
1/212.5, 1/212.5, 1/320,
1, 1, 0,
1, 1, 0,
0, 1, 0,
1, 1, 1), ncol = 3, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
signs <- c('<=','<=','<=','<=','<=','<=','>=','<=')
RHS <- c(16,12,12,16,1750,1500,600,2500)
# Solucion
solucion <- lp('max', Z, A, signs, RHS)
solucion
solucion$solution
# Defino Variables:
# A1: litros de A con método 1.
# A2: litros de A con método 2.
# B: litros de B.
# Restricciones
# DISPONIBILIDAD
# DISP_C1     A1*1/270 + A2*1/270 + B*1/450       <= 16
# DISP_C2     A1*299/54720 + A2*1/427.5           <= 12
# DISP_C3       B*1/408 + A2*1/262.5              <= 12
# DISP_C4     A1*1/212.5 + A2*1/212.5 + B*1/320   <= 16
#REQUERIMIENTOS
# REQMIN_A   A1 + A2    >= 600
# REQMAX_A   A1 + A2    <= 1750
# REQ_B     B           <= 1500
# LIM_DESP  A1 + A2 + B <= 2500
#Utilizo la librería lpSolve
library(lpSolve)
#funcional
Z <- c(-15.58, -18.23, 99.71)
#Armo una matriz con las restricciones
A <- matrix(c(1/270,1/270,1/450,
0,1/427.5, 299/54720,
0,1/262.5, 1/408,
1/212.5, 1/212.5, 1/320,
1, 1, 0,
1, 1, 0,
0, 1, 0,
1, 1, 1), ncol = 3, byrow = T)
#Defino el vector soluciones de la matriz de restricciones
signs <- c('<=','<=','<=','<=','<=','<=','>=','<=')
RHS <- c(16,12,12,16,1750,1500,600,2500)
# Solucion
solucion <- lp('max', Z, A, signs, RHS)
solucion
solucion$solution
# Defino Variables:
# Ci: manteles comprados el día i.
# LCi: manteles con lavado común el día i.
# LRi: manteles con lavado rápido el día i.
# FUNCIONAL: MIN -> Z=250*C1+250*C2+250*C3+250*C4+250*C5+250*C6+250*7+100*LC1+100*LC2+100*LC3+100*LC4+150*LR1+150*LR2+150*LR3+150*LR4
# Restricciones
# DIA1     C1         = 5
# DIA2     C2         = 6
# DIA3  C3+LR1        = 7
#         LR1        <= 5
# DIA4  C4+LR2+LC1    = 8       # DIA6  C6+LC3+LR4  = 9
#       LC1+LR1      <= 5               LC3+LR3    <= 7
#         LR2        <= 6                 LR4      <= 8
# DIA5  C5+LC2+LR3    = 7       # DIA7  C7+LC4+LR5  = 10
#       LC2+LR2      <= 6               LC4+LR4    <= 8
#         LR3        <= 7                 LR5      <= 7
#Utilizo la librería lpSolve
library(lpSolve)
#funcional
Z <- c(250,250,250,250,250,250,250,100,100,100,100,150,150,150,150,150)
#Armo una matriz con las restricciones
A <- read.csv("Datos ej 2.8.csv")
#Defino el vector soluciones de la matriz de restricciones
signs <- c('=','=','=','<=','=','<=','<=','=','<=','<=','=','<=','<=','=','<=','<=')
RHS <- c(5,6,7,5,8,5,6,7,6,7,9,7,8,10,8,7)
# Solucion
solucion <- lp('min', Z, A, signs, RHS)
solucion
solucion$solution
# Defino Variables:
# Xij: toneladas de carga i en compartimiento j.
# i=1,2,3,4.  j=D,C,T
# FUNCIONAL: MAX -> Z=320*(X1D+X1C+X1T) + 400*(X2D+X2C+X2T) + 360*(X3D+X3C+X3T) + 290*(X4D+X4C+X4T)
# Restricciones de capacidad _C_ = (P)Peso/(V)Volumen (C)compartimento ubicación (D(delantero),C(central),T(trasero))
# PCD  X1D+X2D+X3D+X4D                 <= 12
# VCD  500*X1D+700*X2D+600*X3D+400*X4D <= 7000
# PCC  X1C+X2C+X3C+X4C                 <= 18
# VCC  500*X1C+700*X2C+600*X3C+400*X4C <= 9000
# PCT  X1T+X2T+X3T+X4T                 <= 10
# VCT  500*X1T+700*X2T+600*X3T+400*X4T <= 5000
# Restricciones de disponibilidad, cargas 1,2,3,4
# BAL_C1  X1D+X1C+X1T   <= 20
# BAL_C3  X2D+X2C+X2T   <= 16
# BAL_C3  X3D+X3C+X3T   <= 25
# BAL_C4  X4D+X4C+X4T   <= 13
# Restricciones de equilibrio del avión, EQ_CX (X=C(central),D(delantero),T(trasero))
# EQ_CD   0.7*X1D-0.3*X1C-0.3X1T+0.7*X2D-0.3*X2C-0.3*X2T+0.7*X3D-0.3*X3C-0.3*X3T+0.7*X4D-0.3*X4C-0.3*X4T = 0
# EQ_CC  -0.45*X1D+0.55*X1C-0.45*X1T-0.45*X2D+0.55*X2C-0.45*X2T-0.45*X3D+0.55*X3C-0.45*X3T-0.45*X4D+0.55*X4C-0.45*X4T = 0
# EQ_CT  -0.25*X1D-0.25*X1C+0.75*X1T-0.25*X2D-0.25*X2C+0.75*X2T-0.25*X3D-0.25*X3C+0.75*X3T-0.25*X4D-0.25*X4C+0.75*X4T = 0
#Utilizo la librería lpSolve
library(lpSolve)
#funcional
Z <- c(320,320,320,400,400,400,360,360,360,290,290,290)
#Armo una matriz con las restricciones
A <- read.csv("Matriz Ej 2.9.csv")
#Defino el vector soluciones de la matriz de restricciones
signs <- c('<=','<=','<=','<=','<=','<=','<=','<=','<=','<=','=','=','=')
RHS <- c(12,7000,18,9000,10,5000,20,16,25,13,0,0,0)
# Solucion
solucion <- lp('max', Z, A, signs, RHS)
solucion
solucion$solution
